@using Ighan.CrashLitics.Shared.LoginModels
@layout LoginLayout
@page "/login"
@inject HttpClient httpClient
@inject NavigationManager navigationManager
@inject Ighan.CrashLitics.WebUI.Utilities.TokenProvider tokenProvider
<div class="form-container">
    <div class="form-header">ورود</div>
    <div class="form-body">
        <div class="d-block text-center pt-1">نام کاربری</div>
        <input class="form-control w-75 text-center" type="text" @bind="userName" />
        <div class="d-block text-center pt-1">رمز عبور</div>
        <input class="form-control w-75 text-center" type="password" @bind="password" />
    </div>
    <div class="form-footer">
        <div class="btn-right" @onclick="TryLogin">تأیید</div>
        <div class="btn-left">عضویت</div>
    </div>
</div>

@if (hasError)
{
    <div class="error-container text-center">
        <p>نام کاربری و یا رمز عبور اشتباه است.</p>
    </div>
}

@code {
    private string userName;

    private string password;

    private bool hasError;

    private async void TryLogin()
    {
        var loginResponse = await httpClient.PostAsJsonAsync<LoginModel>("api/login", new LoginModel { UserName = userName, Password = password });
        if (!loginResponse.IsSuccessStatusCode)
            throw new Exception(await loginResponse.Content.ReadAsStringAsync());
        else
        {
            var loginResult = await loginResponse.Content.ReadFromJsonAsync<ApiResult<LoginResult>>();
            if (!loginResult.Success)
                throw new Exception(loginResult.ErrorMessage);
            else if (!loginResult.Data.Success)
                ShowError();
            else
            {
                tokenProvider.SetToken(loginResult.Data.Token);
                navigationManager.NavigateTo("/");
            }
        }
    }

    public async void ShowError()
    {
        hasError = true;
        StateHasChanged();
        await Task.Delay(3000);
        hasError = false;
        StateHasChanged();
    }
}
